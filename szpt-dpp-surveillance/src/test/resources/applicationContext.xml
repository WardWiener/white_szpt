<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
                          http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd">
  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:jdbc-h2.properties</value>
        <value>classpath:config.properties</value>
      </list>
    </property>
  </bean>
  
  <bean id="springContextUtil" class="com.taiji.pubsec.common.tools.spring.SpringContextUtil"></bean>

  <!-- 初始化数据表结构 与默认数据 -->
  <jdbc:initialize-database data-source="dataSource"
    ignore-failures="DROPS" enabled="true">
<!-- 放在文件的最上方，会优先各个bean里的ApplicationContextAware执行;h2的连接要加上DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE -->
    <jdbc:script location="classpath:testdata/table-setup.sql" encoding="UTF-8" execution="INIT" />
    <jdbc:script location="classpath:testdata/data-setup.sql" encoding="UTF-8" execution="INIT" />
  </jdbc:initialize-database>     

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${database.driverClassName}" />
		<property name="jdbcUrl" value="${database.url}" />
		<property name="user" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="maxPoolSize" value="${database.pool.max}" />
		<property name="minPoolSize" value="${database.pool.min}" />
		<property name="initialPoolSize" value="${database.pool.initial}" />
		<property name="idleConnectionTestPeriod" value="0" />
	</bean>	
	
<!--   <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${database.driverClassName}" />
    <property name="url" value="${database.url}" />
    <property name="username" value="${database.username}" />
    <property name="password" value="${database.password}" />
  </bean>	 -->

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
  </bean>

  <bean id="entityManagerFactory"
    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <array>
		<value>com.taiji.pubsec.complex.tools.attachment</value>
		<value>com.taiji.pubsec.szpt.surveillance.result.model</value>
      </array>
    </property>
    <property name="jpaVendorAdapter">
      <bean
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="${hibernate.dialect}" />
        <property name="showSql" value="${hibernate.show_sql}" />
        <property name="generateDdl" value="${hibernate.generateDdl}" />
      </bean>
    </property>
    <property name="jpaPropertyMap">
      <map>
        <entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
        <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
        <entry key="hibernate.ejb.interceptor" value="com.taiji.pubsec.persistence.interceptor.CustomizedInterceptor" />
        <entry key="javax.persistence.validation.mode" value="none" />
      </map>
    </property>
  </bean>


  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager" />
  
	<!-- 2.定义事务通知 ,并指定关联的事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 在属性中定义事务规则 -->
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="on*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="require*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="renew*" propagation="REQUIRED" />
			<tx:method name="destroy*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="sign*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="done*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="is*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 3.定义aop:config -->
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.taiji..service.impl.*.*(..))" />
        <aop:pointcut id="ormMethods" expression="execution(* com.taiji..service.*.*(..))" />
        <aop:pointcut id="ormMethods1" expression="execution(* com.taiji..*Service.*(..))" />
        <aop:pointcut id="ormMethods2" expression="execution(* com.taiji..*ServiceImpl.*(..))" />
		<!-- 将事务通知和切面组合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ormMethods" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ormMethods1" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ormMethods2" />
	</aop:config>
	
	<context:component-scan base-package="com.taiji.*" />  

	<bean id="jpaDao" class="com.taiji.pubsec.persistence.dao.JpaDaoImpl" />
    <bean id="dao" class="com.taiji.pubsec.persistence.dao.JpaDaoImpl" />

	<bean id="sqlDao" class="com.taiji.pubsec.persistence.dao.JpaSqlDaoImpl">
	 <property name = "dataSource" ref="dataSource" />   
	</bean>

  <bean class="com.taiji.pubsec.szpt.surveillance.util.SurveillanceUtilConstant">
	<constructor-arg index="0">
		<value>${szpt.kafka.topic-surveillance-result-to-business}</value>
	</constructor-arg>  	
	<constructor-arg index="1">
		<value>${szpt.kafka.topic-surveillance-business-to-surveil}</value>
	</constructor-arg>  
	<constructor-arg index="2">
		<value>${szpt.kafka.topic-surveillance-img-clue-deploy-to-datagate}</value>
	</constructor-arg>  
	<constructor-arg index="3">
		<value>${szpt.kafka.topic-surveillance-img-result-datagate-to-surveil}</value>
	</constructor-arg>  	
	<constructor-arg index="4">
		<value>${szpt.kafka.topic-surveillance-default-clue-to-surveil}</value>
	</constructor-arg> 				
  </bean>
  
  <bean id="kafkaProducer" class="com.taiji.pubsec.szpt.kafka.KafkaProducer">			
  </bean>       
  
  <bean id="imgClueSubjectDeployService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.deploy.MockImgClueSubjectDeployServiceImpl" />
  
  <bean id="flightClueSubjectProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockFlightClueSubjectProcessServiceImpl" />
  <bean id="hotelClueSubjectProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockHotelClueSubjectProcessServiceImpl" />
  <bean id="imgClueSubjectProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockImgClueSubjectProcessServiceImpl" />
  <bean id="internetBarSubjectClueProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockInternetBarSubjectClueProcessServiceImpl" />
  <bean id="trainClueSubjectProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockTrainClueSubjectProcessServiceImpl" />
  <bean id="wifiClueSubjectProcessService" class="com.taiji.pubsec.szpt.dpp.surveillance.test.mock.service.impl.clue.process.MockWifiClueSubjectProcessServiceImpl" />

</beans>
	